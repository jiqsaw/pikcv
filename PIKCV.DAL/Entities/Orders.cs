
// Generated by MyGeneration Version # (1.3.0.0)

using System;
using System.Data;
using System.Data.SqlClient;

namespace PIKCV.DAL
{
	public class Orders : _Orders
	{
		public Orders()
		{
		
		}
        //OrderTypeName ile birlikte Orderlarý Getiriri
        public DataTable GetOrders(int CompanyID, int ProcessTypeCode)
        {
            SqlConnection conn = DBHelper.getConnection();
            SqlCommand cmd = DBHelper.getSprocCmd("_GetOrdersWithOrderTypeNames", conn);
            SqlDataAdapter da;
            SqlParameter param;
            DataTable dt = new DataTable();

            param = new SqlParameter("@CompanyID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = CompanyID;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@ProcessTypeCode", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = ProcessTypeCode;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@LanguageID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = 1;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@IsDeleted", SqlDbType.Bit);
            param.Direction = ParameterDirection.Input;
            param.Value = false;
            cmd.Parameters.Add(param);

            da = new SqlDataAdapter(cmd);
            da.Fill(dt);
            return dt;
        }

        //Ýþlemler
        public DataTable GetTransactions(int CompanyID, int ProcessTypeCode, int LanguageID, int OrderTypeID)
        {
            SqlConnection conn = DBHelper.getConnection();
            SqlCommand cmd = DBHelper.getSprocCmd("_GetTransactions", conn);
            SqlDataAdapter da;
            SqlParameter param;
            DataTable dt = new DataTable();

            param = new SqlParameter("@CompanyID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = CompanyID;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@ProcessTypeCode", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = ProcessTypeCode;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@LanguageID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = LanguageID;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@OrderTypeID", SqlDbType.Int);
            param.Direction = ParameterDirection.Input;
            param.Value = OrderTypeID;
            cmd.Parameters.Add(param);

            da = new SqlDataAdapter(cmd);
            da.Fill(dt);
            return dt;
        }

        //Ýþlemler
        public DataTable GetTransactionReport(int CompanyID, int OrderType_CV, int OrderType_BuyCredit, int PaidProcessType, bool IsConfirmed,
                int LanguageID, DateTime OrderStartDate, DateTime OrderEndDate)
        {
            SqlConnection conn = DBHelper.getConnection();
            SqlCommand cmd = DBHelper.getSprocCmd("_GetTransactionReport", conn);
            SqlDataAdapter da;
            SqlParameter param;
            DataTable dt = new DataTable();

            param = new SqlParameter("@CompanyID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = CompanyID;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@OrderType_CV", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = OrderType_CV;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@OrderType_BuyCredit", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = OrderType_BuyCredit;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@PaidProcessType", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = PaidProcessType;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@IsConfirmed", SqlDbType.Bit);
            param.Direction = ParameterDirection.Input;
            param.Value = IsConfirmed;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@LanguageID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = LanguageID;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@OrderStartDate", SqlDbType.DateTime);
            param.Direction = ParameterDirection.Input;
            param.Value = OrderStartDate;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@OrderEndDate", SqlDbType.DateTime);
            param.Direction = ParameterDirection.Input;
            param.Value = OrderEndDate;
            cmd.Parameters.Add(param);

            da = new SqlDataAdapter(cmd);
            da.Fill(dt);
            return dt;
        }

        //Order Reports için Getirir
        public DataTable GetOrderReports(int CompanyID)
        {
            SqlConnection conn = DBHelper.getConnection();
            SqlCommand cmd = DBHelper.getSprocCmd("_GetOrdersReports", conn);
            SqlDataAdapter da;
            SqlParameter param;
            DataTable dt = new DataTable();

            param = new SqlParameter("@CompanyID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = CompanyID;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@LanguageID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = 1;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@IsDeleted", SqlDbType.Bit);
            param.Direction = ParameterDirection.Input;
            param.Value = false;
            cmd.Parameters.Add(param);

            da = new SqlDataAdapter(cmd);
            da.Fill(dt);
            return dt;
        }
        //OrderItemLines için Getirir
        public DataTable GetOrderReports(int CompanyID, DateTime date)
        {
            SqlConnection conn = DBHelper.getConnection();
            SqlCommand cmd = DBHelper.getSprocCmd("_GetOrdersLineItemsReports", conn);
            SqlDataAdapter da;
            SqlParameter param;
            DataTable dt = new DataTable();

            param = new SqlParameter("@CompanyID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = CompanyID;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@OrderDate", SqlDbType.DateTime, 8);
            param.Direction = ParameterDirection.Input;
            param.Value = date;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@LanguageID", SqlDbType.Int, 4);
            param.Direction = ParameterDirection.Input;
            param.Value = 1;
            cmd.Parameters.Add(param);

            param = new SqlParameter("@IsDeleted", SqlDbType.Bit);
            param.Direction = ParameterDirection.Input;
            param.Value = false;
            cmd.Parameters.Add(param);

            da = new SqlDataAdapter(cmd);
            da.Fill(dt);
            return dt;
        }
	}

}
